/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -a exportedconnection -N -i marshalarguments.h -i types.h -i busconnection.h -l BusConnection -c ConnectionAdaptor introspection/nm-exported-connection.xml
 *
 * qdbusxml2cpp is Copyright (C) 2009 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef EXPORTEDCONNECTION_H
#define EXPORTEDCONNECTION_H

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
#include "marshalarguments.h"
#include "types.h"
#include "busconnection.h"
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;

/*
 * Adaptor class for interface org.freedesktop.NetworkManagerSettings.Connection
 */
class ConnectionAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "org.freedesktop.NetworkManagerSettings.Connection")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"org.freedesktop.NetworkManagerSettings.Connection\" >\n"
"    <method name=\"Update\" >\n"
"      <arg direction=\"in\" type=\"a{sa{sv}}\" name=\"properties\" >\n"
"      </arg>\n"
"    </method>\n"
"    <method name=\"Delete\" >\n"
"    </method>\n"
"    <method name=\"GetSettings\" >\n"
"      <arg direction=\"out\" type=\"a{sa{sv}}\" name=\"settings\" >\n"
"      </arg>\n"
"    </method>\n"
"    <signal name=\"Updated\" >\n"
"      <arg type=\"a{sa{sv}}\" name=\"settings\" >\n"
"      </arg>\n"
"    </signal>\n"
"    <signal name=\"Removed\" >\n"
"    </signal>\n"
"  </interface>\n"
        "")
public:
    ConnectionAdaptor(BusConnection *parent);
    virtual ~ConnectionAdaptor();

    inline BusConnection *parent() const
    { return static_cast<BusConnection *>(QObject::parent()); }

public: // PROPERTIES
public Q_SLOTS: // METHODS
    void Delete();
    QVariantMapMap GetSettings();
    void Update(const QVariantMapMap &properties);
Q_SIGNALS: // SIGNALS
    void Removed();
    void Updated(const QVariantMapMap &settings);
};

#endif
