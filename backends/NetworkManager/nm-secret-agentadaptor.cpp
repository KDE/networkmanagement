/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -i types.h -N -a nm-secret-agentadaptor introspection/nm-secret-agent.xml
 *
 * qdbusxml2cpp is Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "nm-secret-agentadaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class SecretAgentAdaptor
 */

SecretAgentAdaptor::SecretAgentAdaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

SecretAgentAdaptor::~SecretAgentAdaptor()
{
    // destructor
}

void SecretAgentAdaptor::CancelGetSecrets(const QDBusObjectPath &connection_path, const QString &setting_name)
{
    // handle method call org.freedesktop.NetworkManager.SecretAgent.CancelGetSecrets
    QMetaObject::invokeMethod(parent(), "CancelGetSecrets", Q_ARG(QDBusObjectPath, connection_path), Q_ARG(QString, setting_name));
}

void SecretAgentAdaptor::DeleteSecrets(const QVariantMapMap &connection, const QDBusObjectPath &connection_path)
{
    // handle method call org.freedesktop.NetworkManager.SecretAgent.DeleteSecrets
    QMetaObject::invokeMethod(parent(), "DeleteSecrets", Q_ARG(QVariantMapMap, connection), Q_ARG(QDBusObjectPath, connection_path));
}

QVariantMapMap SecretAgentAdaptor::GetSecrets(const QVariantMapMap &connection, const QDBusObjectPath &connection_path, const QString &setting_name, const QStringList &hints, uint flags)
{
    // handle method call org.freedesktop.NetworkManager.SecretAgent.GetSecrets
    QVariantMapMap secrets;
    QMetaObject::invokeMethod(parent(), "GetSecrets", Q_RETURN_ARG(QVariantMapMap, secrets), Q_ARG(QVariantMapMap, connection), Q_ARG(QDBusObjectPath, connection_path), Q_ARG(QString, setting_name), Q_ARG(QStringList, hints), Q_ARG(uint, flags));
    return secrets;
}

void SecretAgentAdaptor::SaveSecrets(const QVariantMapMap &connection, const QDBusObjectPath &connection_path)
{
    // handle method call org.freedesktop.NetworkManager.SecretAgent.SaveSecrets
    QMetaObject::invokeMethod(parent(), "SaveSecrets", Q_ARG(QVariantMapMap, connection), Q_ARG(QDBusObjectPath, connection_path));
}

