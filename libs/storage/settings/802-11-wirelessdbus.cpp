// This file is generated by kconfig_compiler from 802-11-wireless.kcfg.
// All changes you do to this file will be lost.

#include "802-11-wirelessdbus.h"

#include "802-11-wireless.h"

WirelessDbus::WirelessDbus(WirelessSetting * setting) : SettingDbus(setting)
{
}

WirelessDbus::~WirelessDbus()
{
}

void WirelessDbus::fromMap(const QVariantMap & map)
{
  WirelessSetting * setting = static_cast<WirelessSetting *>(m_setting);
  if (map.contains("ssid")) {
    setting->setSsid(map.value("ssid").value<QByteArray>());
  }
  // SECRET
  if (map.contains("mode")) {
    setting->setMode(map.value("mode").value<int>());
  }
  if (map.contains("band")) {
    setting->setBand(map.value("band").value<int>());
  }
  if (map.contains("channel")) {
    setting->setChannel(map.value("channel").value<uint>());
  }
  if (map.contains("bssid")) {
    setting->setBssid(map.value("bssid").value<QByteArray>());
  }
  if (map.contains("rate")) {
    setting->setRate(map.value("rate").value<uint>());
  }
  if (map.contains("txpower")) {
    setting->setTxpower(map.value("txpower").value<uint>());
  }
  if (map.contains("macaddress")) {
    setting->setMacaddress(map.value("macaddress").value<QByteArray>());
  }
  if (map.contains("mtu")) {
    setting->setMtu(map.value("mtu").value<uint>());
  }
  if (map.contains("seenbssids")) {
    setting->setSeenbssids(map.value("seenbssids").value<QStringList>());
  }
  if (map.contains("security")) {
    setting->setSecurity(map.value("security").value<QString>());
  }
}

QVariantMap WirelessDbus::toMap()
{
  QVariantMap map;
  WirelessSetting * setting = static_cast<WirelessSetting *>(m_setting);
  map.insert("ssid", setting->ssid());
  // SECRET
  map.insert("mode", setting->mode());
  map.insert("band", setting->band());
  map.insert("channel", setting->channel());
  map.insert("bssid", setting->bssid());
  map.insert("rate", setting->rate());
  map.insert("txpower", setting->txpower());
  map.insert("macaddress", setting->macaddress());
  map.insert("mtu", setting->mtu());
  map.insert("seenbssids", setting->seenbssids());
  map.insert("security", setting->security());
  return map;
}

