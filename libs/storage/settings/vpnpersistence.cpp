// This file is generated by kconfig_compiler from vpn.kcfg.
// All changes you do to this file will be lost.

#include "vpnpersistence.h"

#include "vpn.h"

using namespace Knm;

VpnPersistence::VpnPersistence(VpnSetting * setting, KSharedConfig::Ptr config, ConnectionPersistence::SecretStorageMode mode) : SettingPersistence(setting, config, mode)
{
}

VpnPersistence::~VpnPersistence()
{
}

void VpnPersistence::load()
{
  VpnSetting * setting = static_cast<VpnSetting *>(m_setting);
  setting->setServicetype(m_config->readEntry("servicetype", ""));
  setting->setData(m_config->readEntry("data", ""));
  setting->setUsername(m_config->readEntry("username", ""));
  setting->setRoutes(m_config->readEntry("routes", QStringList()));
}

void VpnPersistence::save()
{
  VpnSetting * setting = static_cast<VpnSetting *>(m_setting);
  m_config->writeEntry("servicetype", setting->servicetype());
  m_config->writeEntry("data", setting->data());
  m_config->writeEntry("username", setting->username());
  m_config->writeEntry("routes", setting->routes());
}

QMap<QString,QString> VpnPersistence::secrets() const
{
  QMap<QString,QString> map;
  return map;
}

void VpnPersistence::restoreSecrets(QMap<QString,QString> secrets) const
{
  if (m_storageMode == ConnectionPersistence::Secure) {
  Q_UNUSED(secrets);
  }
}
