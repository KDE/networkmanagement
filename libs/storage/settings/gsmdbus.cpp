// This file is generated by kconfig_compiler from gsm.kcfg.
// All changes you do to this file will be lost.

#include "gsmdbus.h"

#include "gsm.h"

using namespace Knm;

GsmDbus::GsmDbus(GsmSetting * setting) : SettingDbus(setting)
{
}

GsmDbus::~GsmDbus()
{
}

void GsmDbus::fromMap(const QVariantMap & map)
{
  GsmSetting * setting = static_cast<GsmSetting *>(m_setting);
  if (map.contains("number")) {
    setting->setNumber(map.value("number").value<QString>());
  }
  if (map.contains("username")) {
    setting->setUsername(map.value("username").value<QString>());
  }
  // SECRET
  if (map.contains("password")) {
    setting->setPassword(map.value("password").value<QString>());
  }
  if (map.contains("apn")) {
    setting->setApn(map.value("apn").value<QString>());
  }
  if (map.contains(QLatin1String(NM_SETTING_GSM_NETWORK_ID))) {
    setting->setNetworkid(map.value(QLatin1String(NM_SETTING_GSM_NETWORK_ID)).value<QString>());
  }
  if (map.contains(QLatin1String(NM_SETTING_GSM_NETWORK_TYPE))) {
    setting->setNetworktype(map.value(QLatin1String(NM_SETTING_GSM_NETWORK_TYPE)).value<int>());
  }
  if (map.contains("band")) {
    setting->setBand(map.value("band").value<int>());
  }
  if (map.contains("pin")) {
    setting->setPin(map.value("pin").value<QString>());
  }
  if (map.contains("puk")) {
    setting->setPuk(map.value("puk").value<QString>());
  }
}

QVariantMap GsmDbus::toMap()
{
  QVariantMap map;
  GsmSetting * setting = static_cast<GsmSetting *>(m_setting);
  map.insert("number", setting->number());
  map.insert("username", setting->username());
  map.insert("apn", setting->apn());
  map.insert(QLatin1String(NM_SETTING_GSM_NETWORK_ID), setting->networkid());
  map.insert(QLatin1String(NM_SETTING_GSM_NETWORK_TYPE), setting->networktype());
  map.insert("band", setting->band());
  map.insert("pin", setting->pin());
  map.insert("puk", setting->puk());
  return map;
}

QVariantMap GsmDbus::toSecretsMap()
{
  QVariantMap map;
  GsmSetting * setting = static_cast<GsmSetting *>(m_setting);
  map.insert("password", setting->password());
  return map;
}

