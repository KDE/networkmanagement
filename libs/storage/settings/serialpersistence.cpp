// This file is generated by kconfig_compiler from serial.kcfg.
// All changes you do to this file will be lost.

#include "serialpersistence.h"

#include "serial.h"

using namespace Knm;

SerialPersistence::SerialPersistence(SerialSetting * setting, KSharedConfig::Ptr config, ConnectionPersistence::SecretStorageMode mode) : SettingPersistence(setting, config, mode)
{
}

SerialPersistence::~SerialPersistence()
{
}

void SerialPersistence::load()
{
  SerialSetting * setting = static_cast<SerialSetting *>(m_setting);
  setting->setBaud(m_config->readEntry("baud", 0));
  setting->setBits(m_config->readEntry("bits", 8));
  setting->setParity(m_config->readEntry("parity", "None"));
  setting->setStopbits(m_config->readEntry("stopbits", 1));
  setting->setSenddelay(m_config->readEntry("senddelay", 0));
}

void SerialPersistence::save()
{
  SerialSetting * setting = static_cast<SerialSetting *>(m_setting);
  m_config->writeEntry("baud", setting->baud());
  m_config->writeEntry("bits", setting->bits());
  m_config->writeEntry("parity", setting->parity());
  m_config->writeEntry("stopbits", setting->stopbits());
  m_config->writeEntry("senddelay", setting->senddelay());
}

QMap<QString,QString> SerialPersistence::secrets() const
{
  QMap<QString,QString> map;
  return map;
}

void SerialPersistence::restoreSecrets(QMap<QString,QString> secrets) const
{
  if (m_storageMode == ConnectionPersistence::Secure) {
  Q_UNUSED(secrets);
  }
}
