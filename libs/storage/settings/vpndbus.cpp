// This file is generated by kconfig_compiler from vpn.kcfg.
// All changes you do to this file will be lost.

#include "vpndbus.h"

#include "vpn.h"

using namespace Knm;

VpnDbus::VpnDbus(VpnSetting * setting) : SettingDbus(setting)
{
}

VpnDbus::~VpnDbus()
{
}

void VpnDbus::fromMap(const QVariantMap & map)
{
  VpnSetting * setting = static_cast<VpnSetting *>(m_setting);
  if (map.contains(QLatin1String(NM_SETTING_VPN_SERVICE_TYPE))) {
    setting->setServicetype(map.value(QLatin1String(NM_SETTING_VPN_SERVICE_TYPE)).value<QString>());
  }
  if (map.contains(QLatin1String(NM_SETTING_VPN_DATA))) {
    setting->setData(map.value(QLatin1String(NM_SETTING_VPN_DATA)).value<QString>());
  }
  if (map.contains(QLatin1String(NM_SETTING_VPN_USER_NAME))) {
    setting->setUsername(map.value(QLatin1String(NM_SETTING_VPN_USER_NAME)).value<QString>());
  }
  if (map.contains("routes")) {
    setting->setRoutes(map.value("routes").value<QStringList>());
  }
}

QVariantMap VpnDbus::toMap()
{
  QVariantMap map;
  VpnSetting * setting = static_cast<VpnSetting *>(m_setting);
  map.insert(QLatin1String(NM_SETTING_VPN_SERVICE_TYPE), setting->servicetype());
  map.insert(QLatin1String(NM_SETTING_VPN_DATA), setting->data());
  map.insert(QLatin1String(NM_SETTING_VPN_USER_NAME), setting->username());
  map.insert("routes", setting->routes());
  return map;
}

QVariantMap VpnDbus::toSecretsMap()
{
  QVariantMap map;
  return map;
}

